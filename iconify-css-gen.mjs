import { promises as fs } from 'fs'
import { join, basename } from 'path'
import { parseSVGContent } from '@iconify/utils/lib/svg/parse.mjs'
import { iconToSVG } from '@iconify/utils/lib/svg/build.mjs'

const ICONS_DIR = 'icons'
const OUTPUT_JSON = 'iconify-icons.json'
const OUTPUT_CSS = 'iconify-icons.css'
const CSS_PREFIX = 'iconify'

// 将SVG内容转换为base64编码的Data URL
function svgToDataUrl(svgContent) {
  // 清理SVG内容 - 移除不必要的空白和属性
  const cleanedSvg = svgContent
    .replace(/>\s+</g, '><') // 移除标签间的空白
    .replace(/\s+/g, ' ') // 压缩连续空白
    .trim()
  
  // 尝试UTF-8编码，如果太长则使用base64
  const utf8Url = `data:image/svg+xml;utf8,${encodeURIComponent(cleanedSvg)}`
  
  // 如果URL太长（超过8000字符），使用base64编码
  if (utf8Url.length > 8000) {
    const base64 = Buffer.from(cleanedSvg, 'utf8').toString('base64')
    return `data:image/svg+xml;base64,${base64}`
  }
  
  return utf8Url
}

// 1. 读取所有 svg 文件
const files = (await fs.readdir(ICONS_DIR)).filter(f => f.endsWith('.svg'))
const iconSet = {
  prefix: 'myicon',
  icons: {},
  width: 24,
  height: 24
}

for (const file of files) {
  const svgRaw = await fs.readFile(join(ICONS_DIR, file), 'utf-8')
  // 2. 保持原始颜色，不替换为currentColor
  const svg = svgRaw
  // 3. 解析 SVG
  const parsed = parseSVGContent(svg)
  if (!parsed) continue
  // 4. 组装 icon set，文件名转下划线
  let name = basename(file, '.svg').replace(/[^a-zA-Z0-9_-]/g, '_')
  iconSet.icons[name] = {
    body: parsed.body,
    width: parsed.width || 24,
    height: parsed.height || 24,
    viewBox: parsed.viewBox || '0 0 24 24'
  }
}

// 5. 生成 JSON 文件
await fs.writeFile(OUTPUT_JSON, JSON.stringify(iconSet, null, 2))

// 6. 生成 CSS 文件
let cssContent = '/* Generated by iconify-css-gen.mjs - Colored Icons */\n'
cssContent += '.iconify { display: inline-block; width: 1em; height: 1em; vertical-align: -0.125em; background-repeat: no-repeat; background-position: center; background-size: contain; }\n'

for (const file of files) {
  const svgRaw = await fs.readFile(join(ICONS_DIR, file), 'utf-8')
  // 保持原始颜色的SVG
  const svg = svgRaw
  
  // 文件名转CSS类名
  let name = basename(file, '.svg').replace(/[^a-zA-Z0-9_-]/g, '_')
  
  // 生成优化的data URL
  const dataUrl = svgToDataUrl(svg)
  
  cssContent += `.${CSS_PREFIX}-${name} { background-image: url('${dataUrl}'); }\n`
}

await fs.writeFile(OUTPUT_CSS, cssContent)

console.log(`✅ Generated ${files.length} colored icons`)
console.log(`📄 JSON: ${OUTPUT_JSON}`)
console.log(`🎨 CSS: ${OUTPUT_CSS}`) 
